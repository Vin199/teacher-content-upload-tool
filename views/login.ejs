<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>Login Page</title>
    <link rel="stylesheet" href="/assets/css/login.css" type="text/css">
</head>

<body>
    <!-- The surrounding HTML is left untouched by FirebaseUI.
         Your app may use that space for branding, controls and other customizations.-->

    <div class="login__container">
        <img class="login__img" src="/assets/images/login_screen_logo.svg" alt="iPrep Logo">
        <span class="login_text">Log in</span>
        <span class="span_text">Please Choose a Method Below To Login To Your Account</span>
        <button type="submit" id="loginScreen"> <img src="/assets/images/logos_google-gmail.svg" alt="Gmail Logo">
            Gmail</button>
        <span class="or">or</span>
        <input type="text" id="number" placeholder="Enter Your Phone Number">
        <div id="continue" class="cont-3">
            <span>Continue</span>
            <img src="/assets/images/chevron-forward-outline.svg" alt="">
        </div>

        <!-- The Modal -->
        <div id="Modal__3" class="modal-3">
            <!-- Modal content -->
            <div class="modal-content-3">
                <div class="close-div-3">
                    <span class="close-3">&times;</span>
                </div>
                <div class="form-div-3">
                    <span class="otp_text">Enter OTP</span>
                    <span class="verify">Verification OTP sent to 0000000000</span>
                    <input id="otp" type="text">
                    <span class="resend">Resend OTP in <span id="otpTimer">00:30</span> Seconds</span>
                </div>
                <div id="cont_div">
                    <button id="modal_btn" class="btn-3" type="submit">Login</button>
                </div>
            </div>
        </div>

    </div>
    <script type="module">
        // Import the functions you need from the SDKs you need
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.8.1/firebase-app.js";
        import { getAnalytics } from "https://www.gstatic.com/firebasejs/9.8.1/firebase-analytics.js";
        import { getAuth, getAdditionalUserInfo, RecaptchaVerifier, signInWithPhoneNumber, signInWithPopup, signOut, onAuthStateChanged, GoogleAuthProvider } from "https://www.gstatic.com/firebasejs/9.8.1/firebase-auth.js";

        // Your web app's Firebase configuration
        // For Firebase JS SDK v7.20.0 and later, measurementId is optional
        const firebaseConfig = {
            apiKey: "AIzaSyDNFbXQo3Fd7PYfWBwGJd6XdihZ3w-yEvk",
            authDomain: "node-project-c4942.firebaseapp.com",
            databaseURL: "https://node-project-c4942-default-rtdb.firebaseio.com",
            projectId: "node-project-c4942",
            storageBucket: "node-project-c4942.appspot.com",
            messagingSenderId: "581470710657",
            appId: "1:581470710657:web:a4792037ef1d415c375680",
            measurementId: "G-HQZDXNGMJ3"
        };

        // Initialize Firebase
        const app = initializeApp(firebaseConfig);


        const phoneNumberField = document.getElementById('number');
        const codeField = document.getElementById('otp');
        const getCodeButton = document.getElementById('continue');
        const signInWithPhoneButton = document.getElementById('modal_btn');


        const auth = getAuth(app);

        window.recaptchaVerifier = new RecaptchaVerifier('modal_btn', {
            'size': 'invisible',
            'callback': (response) => {
                // reCAPTCHA solved, allow signInWithPhoneNumber.
                onSignInSubmit();
            }
        }, auth);

        const sendVerificationCode = () => {
            const phoneNumber = phoneNumberField.value;
            const appVerifier = window.recaptchaVerifier;

            // Sends the 6 digit code to the user's phone
            signInWithPhoneNumber(auth, `+91${phoneNumber}`, appVerifier)
                .then(confirmationResult => {

                    let time = 30
                    const otpInterval = setInterval(() => {
                        const t = --time

                        if (t == 0) {
                            clearInterval(otpInterval)
                        }

                        document.getElementById('otpTimer').innerHTML = '00:' + (t < 10 ? '0' + t : t)
                    }, 1000)

                    //const sentCodeId = confirmationResult.verificationId;
                    window.confirmationResult = confirmationResult;
                    // Sign in if the verification code is set correctly
                    signInWithPhoneButton.addEventListener('click', () => signInWithPhone());
                })
                .catch((error) => {
                    // Error; SMS not sent
                    // ...
                    window.alert("SMS Not Sent");
                    console.log(error);
                });
        }

        const signInWithPhone = () => {
            const code = codeField.value;
            confirmationResult.confirm(code).then((result) => {
                // User signed in successfully.
                const user = result.user;
                //window.alert("User signed in successfully!!");

                console.log(user);
                // location.href = "/dashboard";
                // ...
            }).catch((error) => {
                // User couldn't sign in (bad verification code?)
                // ...
                console.log(error);
                window.alert("User couldn't sign in (bad verification code?)");
            });
        }

        getCodeButton.addEventListener('click', sendVerificationCode);


        /* ----------------------- Google Authentication ------------------------*/

        const provider = new GoogleAuthProvider();
        // document.getElementById("LogoutScreen").addEventListener('click', googleLogOut);

        function googleLogin() {
            // console.log("Login Button Clicked!!");
            signInWithPopup(auth, provider).then(result => {
                // console.log('>>> ', result.user);
                const credential = GoogleAuthProvider.credentialFromResult(result);
                const token = credential.accessToken;
                //const additionalUserInfo = getAdditionalUserInfo(credential);

                // let isNewUser = result.additionalUserInfo.isNewUser;
                //console.log(credential, additionalUserInfo);
                // if (isNewUser) {
                //     //delete the created user
                //     console.log("isNewUser");
                //     result.user.delete();
                // } else {
                //     // your sign in flow
                //     const user = {
                //         'email': result.user.email,
                //         'uid': result.user.uid,
                //         'emailVerified': result.user.emailVerified,
                //         'displayName': result.user.displayName,
                //         'createdAt': result.user.metadata.createdAt,
                //         'lastLoginAt': result.user.metadata.lastLoginAt
                //     }
                //     //abc(user)
                //     console.log(user);

                //     location.href = '/dashboard'
                // }
                const user = {
                    'email': result.user.email,
                    'uid': result.user.uid,
                    'emailVerified': result.user.emailVerified,
                    'displayName': result.user.displayName,
                    'createdAt': result.user.metadata.createdAt,
                    'lastLoginAt': result.user.metadata.lastLoginAt
                }

                // window.localStorage.setItem("teacher_info", JSON.stringify(user));
                localStorage.setItem('user', JSON.stringify(user))
                //abc(user)
                //console.log(user);

                location.href = '/dashboard'
            })
                .catch((error) => {
                    const errorCode = error.code;
                    const errorMessage = error.message;
                    const email = error.email;
                    const credential = GoogleAuthProvider.credentialFromError(error);
                })
        }

        const abc = (user) => {
            const options = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(user)
            }

            fetch('/teachers', options);
        }

        document.getElementById("loginScreen").addEventListener('click', googleLogin);

        // function googleLogOut() {
        //     signOut(auth).then(() => {
        //         console.log('Signed Out');
        //         // location.href = 'login'
        //     }).catch((error) => {
        //         console.error('Sign Out Error', error);
        //     });
        // }

        // function UserDetail(user) {
        //     document.getElementById("userDetails").innerHTML = `
        //     <img src="${user.photoURL}" style= "width:10%">
        //     <p>Name: ${user.displayName}</p>
        //     <p>Email Id: ${user.email}</p>
        //     `
        // }
    </script>
    <script type="module" src="/assets/scripts/login.js"></script>
</body>

</html>