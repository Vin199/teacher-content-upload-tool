<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <title>Number verification with OTP</title>
    <link rel="stylesheet" href="/assets/css/login.css" type="text/css">
</head>

<body>
    <!-- The surrounding HTML is left untouched by FirebaseUI.
         Your app may use that space for branding, controls and other customizations.-->

    <div class="login__container">
        <img class="login__img" src="/assets/images/login_screen_logo.svg" alt="iPrep Logo">
        <span class="login_text">Log in</span>
        <span class="span_text">Please Choose a Method Below To Login To Your Account</span>
        <button type="submit" id="LoginScreen"> <img src="/assets/images/logos_google-gmail.svg" alt="Gmail Logo"> Gmail</button>
        <span class="or">or</span>
        <input type="text" id="number" placeholder="Enter Your Phone Number">
        <button type="button" id="continue"><div>Continue</div> <img src="/assets/images/chevron-forward-outline.svg" alt=""></button>
        <!-- <input type="text" id="number" placeholder="+91...">
        <div id="recaptcha-container"></div>
        <button type="button" id="send">Login With Phone Number</button><br>
        <p>or</p>
        <input type="submit" value="Login With Google" id="LoginScreen"> -->
    </div>

    <script type="module">
        // Import the functions you need from the SDKs you need
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.11/firebase-app.js";
        import { getAnalytics } from "https://www.gstatic.com/firebasejs/9.6.11/firebase-analytics.js";
        import { getAuth, /* RecaptchaVerifier, signInWithPhoneNumber, */  signInWithPopup, signOut, onAuthStateChanged, GoogleAuthProvider } from "https://www.gstatic.com/firebasejs/9.6.11/firebase-auth.js";
        // TODO: Add SDKs for Firebase products that you want to use
        // https://firebase.google.com/docs/web/setup#available-libraries

        // Your web app's Firebase configuration
        // For Firebase JS SDK v7.20.0 and later, measurementId is optional
        const firebaseConfig = {
            apiKey: "AIzaSyDNFbXQo3Fd7PYfWBwGJd6XdihZ3w-yEvk",
            authDomain: "node-project-c4942.firebaseapp.com",
            databaseURL: "https://node-project-c4942-default-rtdb.firebaseio.com",
            projectId: "node-project-c4942",
            storageBucket: "node-project-c4942.appspot.com",
            messagingSenderId: "581470710657",
            appId: "1:581470710657:web:a4792037ef1d415c375680",
            measurementId: "G-HQZDXNGMJ3"
        };

        // Initialize Firebase
        const app = initializeApp(firebaseConfig);


        const auth = getAuth()
        /* function getPhoneNumberFromUserInput() {
            const bttn = document.getElementById("send");
            bttn.addEventListener('click', function () {
                return document.getElementById("number").value;
            })
        }

        window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {
            'size': 'normal',
            'callback': (response) => {
                // reCAPTCHA solved, allow signInWithPhoneNumber.
                // ...
            },
            'expired-callback': () => {
                // Response expired. Ask user to solve reCAPTCHA again.
                // ...
            }
        }, auth);

        const phoneNumber = '8630128769' // getPhoneNumberFromUserInput();
        const appVerifier = window.recaptchaVerifier;

      

        signInWithPhoneNumber(auth, phoneNumber, appVerifier)
        .then((confirmationResult) => {
            // SMS sent. Prompt user to type the code from the message, then sign the
            // user in with confirmationResult.confirm(code).
            window.confirmationResult = confirmationResult;
            // ...
        }).catch((error) => {
            // Error; SMS not sent
            // ...
            console.log(error);
        }); */






















        const provider = new GoogleAuthProvider();

        document.getElementById("LoginScreen").addEventListener('click', googleLogin);
        // document.getElementById("LogoutScreen").addEventListener('click', googleLogOut);

        function googleLogin() {
            // console.log("Login Button Clicked!!");
            signInWithPopup(auth, provider).then(result => {
                // console.log('>>> ', result.user);
                const credential = GoogleAuthProvider.credentialFromResult(result);
                const token = credential.accessToken;
                // const user = result.user
                const user = {
                    'email': result.user.email,
                    'uid': result.user.uid,
                    'emailVerified': result.user.emailVerified,
                    'displayName': result.user.displayName,
                    'createdAt': result.user.metadata.createdAt,
                    'lastLoginAt': result.user.metadata.lastLoginAt
                }
                abc(user)
                location.href = '/dashboard'
            })
            .catch((error) => {
                const errorCode = error.code;
                const errorMessage = error.message;
                const email = error.email;
                const credential = GoogleAuthProvider.credentialFromError(error);
            })
        }

        const abc = (user) => {
            const options = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(user)
        }

        fetch('/teachers', options);
        }

        // function googleLogOut() {
        //     signOut(auth).then(() => {
        //         console.log('Signed Out');
        //         // location.href = 'login'
        //     }).catch((error) => {
        //         console.error('Sign Out Error', error);
        //     });
        // }

        // function UserDetail(user) {
        //     document.getElementById("userDetails").innerHTML = `
        //     <img src="${user.photoURL}" style= "width:10%">
        //     <p>Name: ${user.displayName}</p>
        //     <p>Email Id: ${user.email}</p>
        //     `
        // }
    </script>
</body>

</html>